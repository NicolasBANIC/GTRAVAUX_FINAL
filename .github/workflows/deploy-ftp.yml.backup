name: Build & Deploy to Hostinger

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build
        run: npm run build

      - name: Determine output dir
        id: outdir
        run: |
          if [ -d "out" ]; then 
            echo "dir=out" >> $GITHUB_OUTPUT
            echo "Found out directory"
            ls -la out/
          elif [ -d "build" ]; then 
            echo "dir=build" >> $GITHUB_OUTPUT
            echo "Found build directory"
            ls -la build/
          elif [ -d "dist" ]; then 
            echo "dir=dist" >> $GITHUB_OUTPUT
            echo "Found dist directory"
            ls -la dist/
          else 
            echo "dir=." >> $GITHUB_OUTPUT
            echo "No specific output directory found, using current directory"
            ls -la
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: ${{ steps.outdir.outputs.dir }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: site
          path: site

      - name: Debug downloaded files
        run: |
          echo "=== Downloaded files structure ==="
          ls -la site/
          echo "=== Looking for index.html ==="
          find site/ -name "index.html" -type f
          echo "=== Total files count ==="
          find site/ -type f | wc -l

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ${{ secrets.FTP_SECURE == 'true' && 'ftps' || 'ftp' }}
          local-dir: site/
          server-dir: ${{ secrets.FTP_REMOTE_DIR }}/
          dangerous-clean-slate: true
          log-level: verbose